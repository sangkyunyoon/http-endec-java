{"name":"http-endec-java","tagline":"Java HTTP encoder / decoder","body":"# JAVA HTTP encoder / decoder  #\r\n\r\nhttp://akinaru.github.io/http-endec-java/\r\n\r\n<i>Last update 08/05/2015</i>\r\n\r\nHTTP encoder/decoder in JAVA.\r\n\r\n* parse all your HTTP streaming\r\n\r\n* chunk your bufferized data into outputstream according to value `fr.bmartel.protocol.socket.DataBufferConst.DATA_BLOCK_SIZE_LIMIT` (you can change this value if you use a JVM which does not support this one)\r\n* All HTTP stream is encoded in UTF-8\r\n\r\n* You can build HTTP request/response independently from Http parser\r\n\r\n`http-endec-java`      : library source<br/>\r\n`http-endec-java-test` : test unit for library source\r\n\r\n<hr/>\r\n\r\n<b>Build HTTP request</b>\r\n\r\n`HttpFrame frameRequest = new HttpFrame(`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`\t\t\t\t\t\t\t\tHttpMethod.POST_REQUEST      ,`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`\t\t\t\t\t\t\t\tnew HttpVersion(1, 1)        ,`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`\t\t\t\t\t\t\t\tnew HashMap<String, String>(),`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`\t\t\t\t\t\t\t\t\"/rest/help/todo\"            ,`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`\t\t\t\t\t\t\t\tnew ListOfBytes(\"kind of body\")`<br/>\r\n`\t\t\t\t\t\t\t);`\r\n\r\n`frameRequest.toString()` will print : \r\n\r\n`POST /rest/help/todo HTTP/1.1`<br/>\r\n`` `` <br/>\r\n``kind of body``<br/>\r\n`` ``<br/>\r\n`` ``<br/>\r\n\r\n<hr/>\r\n\r\n<b>Build HTTP response</b>\r\n\r\n`HttpResponseFrame frameResponse = new HttpResponseFrame(`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`new StatusCodeObject(200, \"OK\"),`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`new HttpVersion(1, 1),`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`new HashMap<String, String>(),`<br/>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`\"\"`<br/>\r\n`);`\r\n\r\n`frameResponse.toString()` will print : \r\n\r\n`HTTP/1.1 200 OK`<br/>\r\n`` ``<br/>\r\n`` ``<br/>\r\n\r\n<hr/>\r\n\r\n<b>Parse your HTTP inputstream</b>\r\n\r\n`HttpFrame newFrame = new HttpFrame();`\r\n\r\n`newFrame.parseHttp(inputstream);`\r\n\r\nYou will access your result in sub method :\r\n\r\n`newFrame.getUri()`<br/>\r\n`newFrame.getHttpVersion()`<br/>\r\n`newFrame.getMethod()`<br/>\r\n`newFrame.getQueryString()`<br/>\r\n`newFrame.getHost()`<br/>\r\n`newFrame.getBody().getBytes()`<br/>\r\n\r\n<hr/>\r\n\r\n<b>Change your buffer size</b>\r\n\r\nIn `fr.bmartel.protocol.socket.DataBufferConst`\r\n\r\nChange the value : \r\n\r\n`public final static int DATA_BLOCK_SIZE_LIMIT = 4089;`\r\n\r\nto your likings\r\n\r\n<hr/>\r\n\r\n<b>Quick test command line syntax</b> \r\n\r\n``java -jar http-endec-1.0.jar``\r\n\r\nin folder ./http-endec-java/release\r\n\r\n<hr/>\r\n\r\n* Project is JRE 1.7 compliant\r\n* You can build it with ant => build.xml\r\n* Development on Eclipse \r\n* Specification from RFC specified in https://www.ietf.org/rfc/rfc2616.txt\r\n","google":"UA-62569105-1","note":"Don't delete this file! It's used internally to help with page regeneration."}